c
facility
c
price_multiplier
inventory_ratio
c
inventory_ratio
c
facility
facility.inventory
inventory_ratio
c
facility
facility.price_sell
faciliity.price_sell
c
        max_affordable_scu = (wallet_balance / facility.sell_price.to_f).floor
 max_affordable_scu = (wallet_balance / facility.local_sell_price.to_f).floor
c
facility
total_cost
c
amount
c
amount
User.first.update(wallet_balance:0)
amount
new_balance
self
user
update(wallet_balance: new_balance)
c
ProductionFacility.find_by!(location_name: location.name, commodity_id: commodity.id)
c
commodity
location
c
facility.commodity.is_sellable
facility.commodity
facility
c
ProductionFacility.where(location_name:location_name)
location_name
c
location
c
price_data_array = data['data'] || data
c
ProductionFacility
ProductionFacility.last
terminal
Location.cities.first
City.last
 terminal = Terminal.find_by(api_id: data['id_terminal'])
terminal
c
Location.cities.first
City.first
terminal
terminal.location
Location.find_by(id_city: terminal.id_city)
terminal.location
 terminal = Terminal.find_by(api_id: data['id_terminal']).location
data
price_data
 terminal = Terminal.find_by(api_id: price_data['id_terminal'])
terminal
location.terminal
data['id_space_station']
data['id_space_station'])
data
Location.find_by(id_space_station: data['id_space_station'])
c
Terminal.find_by(api_id: price_data['id_terminal'])
price_data
data['data'].first
data['data']
data.first
data
c
price_data
c
Location.find_by_id(2c378)
Location.find_by_id(2378)
ProductionFacility.where(facility_name:"Ruin Station")
location
Location.where(api_id:2378)
ProductionFacility.where(location_id:2378).count
ProductionFacility.where(location_id:location.id)
location
ProductionFacility.last
location_name
c
ProductionFacility.find_by(location_id: 2178)
ProductionFacility.last
location.id
ProductionFacility.find_by(location_id: location.id)
ProductionFacility.find_by(location_id: location)
location
ProductionFacility.find_by(location: location)
location
ProductionFacility.last.commodity
ProductionFacility.last
ProductionFacility.where(location_id: location.id, commodity_id: commodity.id).first
ProductionFacility.where(location_id: location.id, commodity_id: commodity.id)
ProductionFacility.find_by!(location_id: location.id, commodity_id: commodity.id)
commodity
location
c
location
location_name
c
location
ProductionFacility.find_by(location_id:2833)
ProductionFacility.find_by(location_id:2178)
ProductionFacility.find_by_id(2178)
ProductionFacility.find_by_id(2833)
location.id
ProductionFacility.last.location_id
ProductionFacility.last.location.id
ProductionFacility.last.location
ProductionFacility.last
ProductionFacility.where(location_id:2833)
ProductionFacility.find_by!(location_id: location.id, commodity_id: commodity.id)
ProductionFacility.last.location_id
ProductionFacility
location.id
commodity.id
ProductionFacility.find_by!(location_id: location.id, commodity_id: commodity.id)
commodity
c
Location.find_by!(name: location_name)
location_name
c
distance
c
y
x
planet
c
planet
y
x
c
location
planet
semi_major_axis
c
orbital_period
mass_central_body
semi_major_axis
time_at_perihelion
tick
eccentricity
distance
c
planet.periapsis
planet
c
position1
position2
c
PlanetPositionCalculator.calculate_position(other_location, tick)
other_location
position1
c
@to_location
@from_location
distance
c
user_ship
@user_ship
@to_location
@from_location
distance
c
from_location
duration
c
planet_params
c
planets_params
planet_params
c
params
planet_params
c
planet_params
c
duration
c
location
c
other_location
position1
c
planet
c
location.periapsis
location.apoapsis
location.apoapsis - location.periapsis
location
location.apoapsis - location.periapsis)
c
semi_major_axis
mass_central_body
current_time
mean_anomaly
c
distance
@to_location
@from_location
c
user_ship.update(location_name:"Yela")
user_ship
c
@from_location
c
planet
c
location.save
c
location.save
location.errors
c
self.class.stars.values.find { |star| star.api_id.to_i == 40 }
self.class.stars.values.find { |star| star.api_id.to_i == 68 }
self.class.stars["Kellog"]
self.class.stars[68]
self.class.stars["68"]
self.class.stars.where(api_id: 68).first
 self.class.stars.where(api_id:68).first
 self.class.stars.where(api_id:68)
id_star_system
 self.class.stars[id_star_system]
self.class.stars
puts self.class.stars
  self.stars
  self.class.stars[id_star_system.to_s]
Location.stars
self.stars[api_id:id_star_system]
self.class.stars[api_id:id_star_system]
id_star_system
self.class.stars[id_star_system]
self.stars[id_star_system]
self
c
planet.star
Location.stars
planet.star
planet
c
planet.star
c
 Location.planets.find_by(api_id: location.id_planet)
 Location.planets.find_by(id: location.id_planet)
